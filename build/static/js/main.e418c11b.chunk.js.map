{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/personsdata.js","components/Notification.js","App.js","index.js"],"names":["Person","person","handleDelete","className","name","number","type","style","color","onClick","id","Persons","filteredNames","map","Filter","filterName","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","handleChangingNumber","onSubmit","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","errorMessage","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setErrorMessage","setMessage","useEffect","personService","initialNames","filter","toLowerCase","includes","event","target","preventDefault","nameObject","find","changedNumber","some","window","confirm","updatedNumber","setTimeout","catch","error","console","log","returnedName","concat","deletedName","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e418c11b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n    return (\r\n      <div>\r\n        <li className='name'>{person.name} {person.number} <button type='submit' style={{color: 'blue'}} onClick={() => handleDelete(person.id, person.name)}>delete</button></li>\r\n      </div>\r\n      \r\n  )\r\n  }\r\n\r\n  const Persons = ({filteredNames, handleDelete}) => {\r\n\r\n    return (\r\n      <div>\r\n        {filteredNames.map(person => \r\n           <Person key={person.name}\r\n              person={person}\r\n              handleDelete={handleDelete}></Person>\r\n            )}\r\n    </div>\r\n    )\r\n  }\r\n  \r\n\r\nexport default Persons\r\n ","import React from 'react'\r\n\r\nconst Filter = ({filterName, handleFilterChange}) => {\r\n    return (\r\n       <div>\r\n         filter shown with <input value={filterName}\r\n         onChange={handleFilterChange} />\r\n       </div>\r\n    )  \r\n }\r\n\r\n export default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange, handleChangingNumber}) => {\r\n    return (\r\n      <form onSubmit={addPerson}>\r\n         <h2>add a new</h2>\r\n          <div>\r\n            name: <input value={newName}\r\n            onChange={handleNameChange}/>\r\n          </div>\r\n          <div>\r\n            number: <input value={newNumber}\r\n            onChange={handleNumberChange}/>\r\n            </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm","\r\n// ex 2.16\r\nimport axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const remove = (id, newObject) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  // eslint-disable-next-line import/no-anonymous-default-export\r\n  export default { getAll, create, remove, update }\r\n   ","import React from 'react'\r\n// ex. 2.18\r\nconst Notification = ({ message, errorMessage}) => {\r\n    const style = {\r\n        // conditional change style of color, when errormessage is true / error or false / success:\r\n        color: errorMessage ? 'red' : 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n      };\r\n    \r\n    if (message === null ) {\r\n      return null\r\n    }\r\n    \r\n   \r\n     return (\r\n        <div style={style} >\r\n          {errorMessage}\r\n      </div>\r\n    )\r\n   \r\n    \r\n  }\r\n\r\n  export default Notification\r\n","import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/personsdata'\nimport Notification from './components/Notification'\n\n\n// ex 2.10\n// extracting components from the application. all components then moved to its own modules\n// const Person = ({ person }) => {\n//   return (\n//     <li>{person.name} {person.number}</li>\n// )\n// }\n\n// const Filter = ({filterName, handleFilterChange}) => {\n//    return (\n//       <div>\n//         filter shown with <input value={filterName}\n//         onChange={handleFilterChange} />\n//       </div>\n//    )  \n// }\n\n// const PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n//   return (\n//     <form onSubmit={addPerson}>\n//        <h2>add a new</h2>\n//         <div>\n//           name: <input value={newName}\n//           onChange={handleNameChange}/>\n//         </div>\n//         <div>\n//           number: <input value={newNumber}\n//           onChange={handleNumberChange}/>\n//           </div>\n//         <div>\n//           <button type=\"submit\">add</button>\n//         </div>\n//       </form>\n//   )\n// }\n\n// const Persons = ({filteredNames}) => {\n//   return (\n//     <div>\n//       {filteredNames.map(person => \n//          <Person key={person.name}\n//             person={person}></Person>\n         \n//           )}\n//   </div>\n//   )\n// }\n\n\nconst App = () => {\n  // ex 2.11 - empty array of useState\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filterName, setFilter ] = useState('')\n  const [ errorMessage, setErrorMessage] = useState(true)\n  const [ message, setMessage] = useState(null)\n\n  // ex 2.11 \n  // initial state of the data is fetched from the server using the axios-library; effect hook\n  // useEffect(() => {\n  //   console.log('effect')\n  //   axios\n  //     .get('http://localhost:3001/persons')\n  //     .then(response => {\n  //       console.log('promise fulfilled')\n  //       setPersons(response.data)\n  //     })\n  // }, [])\n  // console.log('render', persons.length, 'persons')\n\n  useEffect(() => {\n    // ex 2.16\n    personService\n      .getAll()\n      .then(initialNames => {\n        setPersons(initialNames)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    } \n\n    // ex 2.15 \n    // adding data of new persons to the server\n    // axios\n    //   .post('http://localhost:3001/persons', nameObject)\n    //   .then(response => {\n    //     setPersons(persons.concat(response.data))\n    //     setNewName('')\n    //     setNewNumber('')\n    //     console.log(response)\n    // })\n\n   \n    // concat creates a new array in which the content of the old array and the new item are both included. \n    // setPersons(persons.concat(nameObject))\n    // setNewName('')\n    // setNewNumber('')\n    // console.log('button clicked', event.target)\n\n    // 2.18\n    const person = persons.find(person => person.name.toLowerCase() === nameObject.name.toLowerCase())\n    const changedNumber = { ...person, number: nameObject.number } \n     \n    // ex 2.7\n    // to prevent adding a new name if this name already exists:\n     if (persons.some(person => person.name.toLowerCase() === nameObject.name.toLowerCase())) { \n      //  ex 2.18\n      // replacling an old number with a new one, updating info of the person\n        (window.confirm(`${newName} is already added to the phonebook. Replace the old number with the new one?`))\n        personService\n        .update(person.id, changedNumber)\n        .then(updatedNumber => {\n        setPersons(persons.map(person => person.name !== changedNumber.name ? person : updatedNumber))\n        setMessage(\n          `'${newName}' phone number is updated`\n        )\n        setErrorMessage(false)\n        setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch (error => {\n          console.log(error.response.data)\n          setMessage(\n            error.response.data.error,\n            `'${newName}' phone number was not updated`\n          )\n          setErrorMessage(true)\n          setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n         console.error('fail', error);\n        })\n    } else {\n      // concat creates a new array in which the content of the old array and the new item are both included. \n    // ex 2.16\n      personService\n      .create(nameObject)\n      .then(returnedName => {\n        setPersons(persons.concat(returnedName)) \n        setMessage(\n          `Person '${newName}' was added to the phonebook`\n        ) \n        setErrorMessage(false)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch (error => {\n        console.log(error.response.data)\n        setMessage(\n         `Person '${newName}' or number was too short and not added to the phonebook`,\n         error.response.data.error\n        ) \n        setErrorMessage(true)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        console.error('fail', error);\n      })\n    }\n    setNewName(' ')\n    setNewNumber(' ')\n  }\n\n\n  // ex 2.17 \n  // deleting a name from the server\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService\n      .remove(id)\n      .then(deletedName => {\n        setPersons(persons.filter(person => person.id !== id ? person : !deletedName))\n        setMessage(`the name '${name}' was deleted from server`) \n        setErrorMessage(false)\n        console.log ('name deleted: ', name)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n    })\n    .catch(error => {\n      setMessage(\n        `Person '${name}' was already deleted`\n      )\n      setErrorMessage(true)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    console.error('fail', error);\n    setPersons(persons.filter(p => p.id !== id))\n    })   \n  }\n}\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n// ex 2.9\n// filtering (.filter) names to those including parts of already existing names (.includes method), case insensitive\nconst filteredNames = filterName === \" \"\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n\n \n  \n//   return (\n//     <div>\n//       <h2>Phonebook</h2>\n//       <div>\n//         filter shown with <input value={filterName}\n//         onChange={handleFilterChange} />\n//       </div>\n//       <form onSubmit={addPerson}>\n//         <h2>add a new</h2>\n//         <div>\n//           name: <input value={newName}\n//           onChange={handleNameChange}/>\n//         </div>\n//         <div>\n//           number: <input value={newNumber}\n//           onChange={handleNumberChange}/>\n//           </div>\n//         <div>\n//           <button type=\"submit\">add</button>\n//         </div>\n//       </form>\n//       <h2>Numbers</h2>\n//       <ul>\n//         {/* display all names, numbers */}\n//       {/* {persons.map(person => \n//          <li key={person.name}>\n//             {person.name} \n//             {person.number}\n//          </li>\n//           )} */}\n//           {/* display only the filtered names, numbers */}\n//            {filteredNames.map(person => \n//          <li key={person.name}>\n//             {person.name} \n//             {person.number}\n//          </li>\n//           )}\n//       </ul>\n//     </div>\n//   )\n// }\n\n// ex 2.10\n// separated components\nreturn (\n  <div>\n    <h1>Phonebook</h1>\n\n    <Notification message={message} errorMessage={errorMessage}/>\n\n    <Filter filterName={filterName} handleFilterChange={handleFilterChange} />\n\n    <h3>Add a new</h3>\n\n    <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} \n    handleNumberChange={handleNumberChange} /> \n      \n    <h3>Numbers</h3>\n\n    <Persons filteredNames={filteredNames} handleDelete={handleDelete} />\n  </div>\n)\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\n\nReactDOM.render(\n<App />, \ndocument.getElementById('root')\n)\n"],"sourceRoot":""}